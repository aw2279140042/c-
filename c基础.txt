#   c语言基础概念
### 编辑器  
>Visual C++ 6.0

##  C程序基础
###1-1  入门程序  

        
        #include<stdio.h>
        void mian()
        {
            printf("this is a c program.\n");
        }   
                
  
###1-2  入门程序  
        
        #include<stdio.h>
        void main()
        {
            int max(int x,int y);   /*对被调用函数max的申明*/
            int a,b,c;
            /*输入变量ab的值*/
            scanf(" %d,%d",&a,&b);
            c=max(a,b);
            printf("max=%d\\n",c);
            
        }
        int max(int x,int y)
        {
            int z;
            if(x>y) z=x;
            else z=y;
            return(z);
        }
        

###1-3  简单的C语言程序介绍  
>C程序是由函数构成的，这使得程序容易实现模块化。  

*  一个函数由两部分组成，首部和函数体。
*  C程序总是从mian函数开始执行，与main的位置无关。
*  C程序书写格式自由，一行内可以有几个语句，一个语句也可以分写在多个行，C程序没有分号。
*  每个语句和数据声明的最后必须有一个分号。
*  C语言本身没有输入输出语句，输入输出的操作是由库函数scanf和printf等函数来完成的。C对输入输出实行”函数化“  

##算法
>一个程序应包括两个方面的内容：1，对数据的描述-数据结构（data structure） 2，对操作的描述-算法（algorithm）  
>完整的程序设计应该是：数据结构+算法+程序设计方法+语言工具

###2-1  算法的概念  
**广义的来说，为解决一个问题而采取的方法和步骤，就称为算法。**  
#####计算机算法分类
* 数值运算算法：求数值解，例如求方程的根，求函数的定积分等。
* 非数值运算：包括的面十分广泛，最常见的是用于事务管理领域，例如图书检索，人事管理等。

###2-2  算法的特性
* **有穷性：**包含有限的操作步骤
* **确定性：**算法中的每一步骤都应当是确定的
* **有零个或多个输入：**输入是指在执行算法时需要从外界取得必要的信息
* **有零个或多个输出：**算法的目的是为了求解，“解”就是输出
* **有效性：**算法中的每一个步骤都应当能有效地执行，并得到确定的结果。  

###2-3  算法的表示  
可以用不同的方法表示算法，常用的有： 

* 自然语言
 * 自然语言就是人们日常使用的语言。**优点：**通俗易懂   **缺点：**歧义性 
* 传统流程图
 * 常用流程图符号：
   * 圆角方框-起止框
   * 菱形框-判断框
   * 直角方框-处理框
   * 平行四边形框-输入输出框
   * 省略号+半个方框-注释框
   * 箭头-流向线
   * 圆-连接点
* 结构化流程图
* 伪代码
* PAD图  

###2-4  算法的三种基本结构
顺序结构，选择结构，循环结构  
当型（while型）循环结构成立继续循环，直到型（until型）不成立继续循环  

###2-5  结构化程序设计方法
* 一个结构化程序就是用高级语言表示的结构化算法。用三种基本结构组成的程序必须是结构化的程序，这种程序便于编写、阅读、修改、维护
* 结构化程序设计强调程序设计风格和程序结构的规范化，提倡清晰的结构。
* 结构化程序设计方法的基本思路是：把一个复杂问题的求解过程分阶段进行，每个阶段处理的问题都控制在人们容易理解和处理的范围内。  

**采用以下方法来保证得到结构化的程序：**
* 自顶向下，逐步细化，模块化设计，结构化编码
* 自下而上，逐步积累，模块化设计，结构化编码

##数据类型、运算符、表达式
###3-1C的数据类型
**数据类型：**  

* 基本类型：
  *  整型    int
  *  字符型  char
  *  实型    （浮点型）
     * 单精度实型   float
     * 双精度实型   double
* 构造类型
  *  数组类型
  *  结构类型   struct
  *  联合类型   union
  *  枚举类型   enum
*  指针类型
*  空类型（无值类型）   void
*  定义类型 typedef

###3-2  常量与变量  
#####3-2-1  常量和符号常量
* 在程序运行过程中，其值不能被改变的量称为常量
* 常量区分为：
  *  整型，实型，字符型，字符串
* **使用：**
        #define PRICE 30    /*常量定义*/  
        #include<stdio.h>
        void mian()
        {
            int num;
            num=10;
            num=num*PRICE;  /*常量使用，常量在这不能赋值*/
        }

#####3-2-2  变量  
*  变量代表内存中具有特定属性的单元，它用来存放数据。在程序运行期间，这些值是可以改变的。
*  变量名实为一个符号地址
*  **变量名称的规定：** *C语言规定表示服只能由字符、数字和下划线字符组成，且第一个字符必须为字母或下划线。*
**注意：**
*  编译系统将大写字母和小写字母认为是两个不同的字符。
*  建议变量名的长度最好不要超过8个字符。
*  在选择变量名和其他标识符时，应注意做到“见名知意”。
*  要求对所有用到的变量做强制定义，也就是“先定义，后使用”。

###3-3  整数数据
#####3-3-1  整数常量的表示方法
整数常量就是整常数。在C语言中，整常数可用以下三种形式标示：  

*  十进制整数  123     -456.4
*  八进制整数  0123    -011
*  十六进制整数    0x123   -0x123  

##### *补充*
*  字节和位
 *  内存以字节为单元组成
 *  每个字节有一个地址
 *  一个字节一般由8个二进制位组成
 *  每个二进位的值是0或1  
*  数值的表示方法――――原码、反码、补码
 *  **原码：**最高位为符号位，其余各位为数值本身的绝对值。
 *  **反码：**
    *  正数：与原码相同。
    *  负数：符号位为1，其余位对原码取反。  
 *  **补码：**
    *  正数：原码相同
    *  负数：最高位为1，其余位为原码取反，在对整个数加1。

*   整型常量的类型
    *   值在-32768~+32767内编译器认为是int类型
    *   值超过上述范围，在-2147473648~+2147483647范围内，编译器认为是long类型
    *   当系统定义short  int  与int占内存长度相同，则两种类型常量均可以赋值给  int和short int型变量
    *   子啊整型常量后面加大写L或小写l，则告诉编辑器，把该整型常量作为long类型处理。例如：123L、0l
    *   在整型常量后面加u，则按无符号整型方式存放，负数转换成补码再按无符号整型方式存放


#####3-3-2  整数变量
*  整型数据在内存中的存放形式
    *  数据在内存中已二进制补码形式存放
    *  每一个整型变量在内存中占2个字节   

*  整型变量的分类
    *  三类整型变量
        *  基本型   int
        *  短整型   short或short int
        *  长征型   long或long int
    *  取值范围
        *  int              16位        -32768~+32767
        *  short            16位        -32768~+32767
        *  long             32位        -2147483648~+2147483647
        *  unsigned int     16位        0~65535
        *  unsigned short   16位        0~65535
        *  unsigned long    32位        0~4294967295


###3-4  浮点型数据
#####3-4-1  常量的表示方法
*   浮点数（float）又称为实数（real）
*   两种表示方法
    *   **十进制小数形式：**必须有小数点。如：0.123、.123、123.0、123.
    *   **指数形式：**e或E之前后必须有数字；指数必须为整数。如：123.1e0等
*   **规范化指数形式**
    *   只有一位非零整数的指数形式。6.28e-1为6.28乘以10的-1次方
    *   是指数的输出形式。-3.08e4为-3.08乘以10的4次方
*   浮点型常量的类型
    *   一般按双精度64位处理，数后加F或f按单精度
    *   浮点型常量不分float和double

#####3-4-2  浮点型变量

**浮点型数据在内存中的存放形式**  

*   浮点型数据在内存中占4个字节（32位）。
*   在内存中分为3部分，指数为2的幂次  

**浮点型变量的分类**    

*   单精度      float       32位    6~7
*   双精度      double      64位    15~16
*   长双精度    long double 128位   18~19

**浮点型数据的舍入误差**

*   数据超过有效位数
*   一个很大的数与一个很小的数加减

### 字符型数据

**字符常量**

*   **定义：**有单引号括起来的单个字符或转义字符。如：‘a’   ‘\t’
*   **字符常量的值：**该字符的ASCII码值。如：‘a’---97    ‘A’---65
*   **定义格式：**char 变量名=值。如：char ch=65=‘A’=‘\101’
*   **转义字符：**反斜线后面跟一个字符或一个代码值表示  

**转义字符及含义**